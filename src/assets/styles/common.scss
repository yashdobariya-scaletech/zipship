.container {
  width: $full-width;
  max-width: 1428px;
  @include padding(0 16px);
  @include margin(0 auto);
  box-sizing: border-box;

  &.with-bottom-panel {
    @include paddingBottom(24px);
  }
}

.width--full {
  width: $full-width !important;
}

.height--full {
  height: $full-height !important;
}

.box-size--border-box {
  box-sizing: border-box;
}

.hide {
  display: none !important;
}

.show {
  display: block;
}

.pointer {
  cursor: pointer;
}

.font--light {
	font-weight: $font-light !important;
}

.font--regular {
	font-weight: $font-regular !important;
}

.font--medium {
	font-weight: $font-medium !important;
}

.font--semi-bold {
	font-weight: $font-semi-bold !important;
}

.font--bold {
	font-weight: $font-bold !important;
}

.font--super {
	font-weight: $font-super !important;
}

.flex {
  @extend %flex;
}

.flex--column {
  @extend %flex--column;
}

.flex-column--reverse {
  @extend %flex-column--reverse;
}

.flex--row {
  @extend %flex--row;
}

.flex--row-reverse {
  @extend %flex--row-reverse;
}

.flex--wrap {
  @extend %flex--wrap;
}

.justify-content--center {
  @extend %justify-content--center;
}

.justify-content--end {
  @extend %justify-content--end;
}

.justify-content--start {
  @extend %justify-content--start;
}

.justify-content--between {
  @extend %justify-content--between;
}

.justify-content--around {
  @extend %justify-content--around;
}

.align-items--center {
  @extend %align-items--center;
}

.align-items--end {
  @extend %align-items--end;
}

.align-items--start {
  @extend %align-items--start;
}

.align-items--baseline {
  @extend %align-items--baseline;
}

.align-items--stretch {
  align-items: stretch;
}

.align-content--baseline {
  align-content: baseline;
}

.object-fit--cover {
  -o-object-fit: cover;
  object-fit: cover;
}

.object-fit--contain {
  -o-object-fit: contain;
  object-fit: contain;
}

.text--left {
  text-align: left;
}

.text--right {
  text-align: right;
}

.text--center {
  text-align: center;
}

.text--lowercase {
  text-transform: lowercase;
}

.text--uppercase {
  text-transform: uppercase;
}

.text--capitalize {
  text-transform: capitalize;
}

.position--relative {
  position: relative;
}

.position--absolute {
  position: absolute !important;
}

.position--fixed {
  position: fixed;
}

.overflow--hidden {
  overflow: hidden;
}

.overflow--hidden-x {
  overflow-x: hidden;
}

.overflow--auto {
  overflow: auto;
}

.bg--white {
  background-color: $white-color;
}

.width--60 {
  width: 60px;
}

.height--60 {
  height: 60px;
}

.height--100 {
  height: 100px;
}

.border--grey {
  @each $key, $value in $grey {
    &-#{$key} {
      border: 1px solid $value !important;
    }
  }
}

.font-size--12 {
  font-size:0.75rem;
}

.font-size--browser-default {
  font-size: $font-size-browser-default;
}

.font-size--24 {
  font-size: 1.5rem;
}

.font-size--28 {
  font-size: 1.75rem;
}

.font-size--32 {
  font-size: 2rem;
}

.line-height--32 {
  line-height: 32px;
}

.line-height--40 {
  line-height: 40px;
}

.line-height--48 {
  line-height: 48px;
}

.text--red {
	@include getShadesColorClasses($red, 'color', 'important');
}

.text--white {
  color: $white-color;
}

.mt--5 {
  @include marginTop(5px);
}

.mb--5 {
  @include marginBottom(5px);
}

.mb--10 {
  @include marginBottom(10px);
}

.mb--16 {
  @include marginBottom(16px);
}

.mb--24 {
  @include marginBottom(24px);
}

.padding--10 {
  @include padding(10px);
}

.padding--16 {
  @include padding(16px);
}

.form__input {
  background-color: transparent;
	font-size: $font-size-sm;
	color: $black-color;
	height: 48px;
	width: $full-width;
	border: 1px solid #a9b1bc;
	@include padding(12px);
	@extend %box-size--border-box;
	border-radius: $border-radius-xl;

	&::placeholder {
		color: #a9b1bc;
	}

  .PhoneInputInput {
		width: calc(#{$full-width} - 58px);
		height: $full-height;
		background-color: $white-color;
		font-size: 0.875rem;
		border: none;
		outline: none;
		@include padding(12px);
		border-radius: $border-radius-xl;
	}
}

.react-datetime-picker__wrapper {
  background-color: transparent;
	font-size: $font-size-sm;
	color: $black-color;
	height: 48px;
	width: $full-width;
	border: 1px solid #a9b1bc;
	@include padding(12px);
	@extend %box-size--border-box;
	border-radius: $border-radius-xl;
}

.react-datetime-picker__inputGroup__input:invalid{
  background-color: transparent !important;
}